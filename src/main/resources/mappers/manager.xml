<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.winiaaid.domain.manager.ManagerRepository">

    <!--  Product  -->

    <insert id="insertProductDetail" parameterType="com.project.winiaaid.domain.manager.ManagerProduct">
        insert into
            winia_product_dtl
        values(
            0,
            #{product_detail_name},
            #{product_category_code},
            #{product_detail_image},
            now(),
            now()
        );
    </insert>

    <insert id="insertProductGroup" parameterType="com.project.winiaaid.domain.manager.ManagerProduct"
        useGeneratedKeys="true" keyProperty="new_product_category_code">
        insert into
            winia_product_mst
        values(
            0,
            #{product_category_name},
            #{company_code},
            #{product_group_code},
            #{main_group_flag},
            <choose>
                <when test="new_group_flag == true">
                    #{product_main_image},
                </when>
                <otherwise>
                    null,
                </otherwise>
            </choose>
            now(),
            now()
        );
    </insert>

    <insert id="insertMainCategoryProduct" parameterType="com.project.winiaaid.domain.manager.ManagerProduct">
        insert into
            product_main_category
        values(
            #{new_product_category_code},
            #{main_group_flag},
            #{company_code},
            #{product_group_code},
            #{product_main_image}
        );
    </insert>

    <select id="findMaxProductGroupCode" resultType="Integer">
        SELECT
            ifnull(max(product_group_code), 1) + 1 AS product_group_code
        FROM
            winia_product_mst;
    </select>

    <select id="findAllCategoryCodeToDelete" parameterType="Integer" resultType="String">
        SELECT
            product_category_code
        FROM
            winia_product_mst
        WHERE
            product_group_code = #{product_group_code};
    </select>

    <select id="findFileImageListToDelete" parameterType="HashMap" resultType="com.project.winiaaid.domain.file.ProductImage">
        SELECT
            product_main_category_image as product_image,
            1 as image_flag
        FROM
            product_main_category
        WHERE
            <choose>
                <when test="main_group_flag == true">
                    <foreach collection="product_category_code_list" item="product_category_code" separator="or">
                        product_category_code = #{product_category_code}
                    </foreach>
                </when>
                <otherwise>
                    product_category_code = #{key_code}
                </otherwise>
            </choose>

        UNION

        SELECT
            product_main_image as product_image,
            2 as image_flag
        FROM
            winia_product_mst
        WHERE
        <choose>
            <when test="main_group_flag == true">
                <foreach collection="product_category_code_list" item="product_category_code" separator="or">
                    product_category_code = #{product_category_code}
                </foreach>
            </when>
            <otherwise>
                product_category_code = #{key_code}
            </otherwise>
        </choose>

        UNION

        SELECT
            product_detail_image as product_image,
            2 as image_flag
        FROM
            winia_product_dtl
        WHERE
        <choose>
            <when test="main_group_flag == true">
                <foreach collection="product_category_code_list" item="product_category_code" separator="or">
                    product_category_code = #{product_category_code}
                </foreach>
            </when>
            <otherwise>
                <choose>
                    <when test="product_type == 'detail'">
                        product_code = #{key_code}
                    </when>
                    <otherwise>
                        product_category_code = #{key_code}
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
        ;
    </select>

    <update id="updateDefaultProductToGroupProduct" parameterType="com.project.winiaaid.domain.manager.ManagerProduct">
        UPDATE
            winia_product_mst wpm
            LEFT OUTER JOIN winia_product_dtl wpd on(wpd.product_category_code = wpm.product_category_code)
            LEFT OUTER JOIN product_main_category pmc on(pmc.product_category_code = wpm.product_category_code)
        SET
            wpm.product_group_code = #{product_group_code},
            wpm.main_group_flag = 1,
            wpd.product_category_code = #{new_product_category_code},
            pmc.group_flag = 1,
            pmc.product_group_code = #{product_group_code}
        WHERE
            wpm.product_category_code = #{product_category_code}
            or wpd.product_category_code = #{product_category_code}
            or pmc.product_category_code = #{product_category_code};
    </update>

    <update id="updateProductInfo" parameterType="com.project.winiaaid.domain.manager.ManagerProduct">
        UPDATE
            winia_product_mst wpm
            LEFT OUTER JOIN winia_product_dtl wpd on(wpd.product_category_code = wpm.product_category_code)
            LEFT OUTER JOIN product_main_category pmc on(pmc.product_category_code = wpm.product_category_code)
        SET
            <choose>
                <when test="main_category_flag == true">
                    wpm.product_category_name = #{product_detail_name}
                    <if test="product_detail_image != null">
                        ,
                        pmc.product_main_category_image = #{product_detail_image}
                    </if>
                </when>
                <when test="product_detail_update_flag == false">
                    wpm.product_category_name = #{product_detail_name}
                    <if test="product_group_modify_flag == true">
                        ,
                        wpm.product_group_code = #{product_key_code}
                    </if>
                    <if test="product_detail_image != null">
                        ,
                        wpm.product_main_image = #{product_detail_image}
                    </if>
                </when>
                <when test="product_detail_update_flag == true">
                    wpd.product_detail_name = #{product_detail_name}
                    <if test="product_group_modify_flag == true">
                        ,
                        wpd.product_category_code = #{product_key_code}
                    </if>
                    <if test="product_detail_image != null">
                        ,
                        wpd.product_detail_image = #{product_detail_image}
                    </if>
                </when>
            </choose>
        WHERE
            <if test="main_category_flag == true or product_detail_update_flag == false">
                wpm.product_category_code = #{key_code};
            </if>
            <if test="product_detail_update_flag == true">
                wpd.product_code = #{key_code};
            </if>

        UPDATE
            winia_product_mst wpm
            LEFT OUTER JOIN winia_product_dtl wpd on(wpd.product_category_code = wpm.product_category_code)
        SET
            <choose>
                <when test="main_category_flag == true or product_detail_update_flag == false">
                    wpd.product_detail_name = #{product_detail_name}
                </when>
                <when test="product_detail_update_flag == true">
                    wpm.product_category_name = #{product_detail_name}
                </when>
            </choose>
        WHERE
            <if test="main_category_flag == true or product_detail_update_flag == false">
                wpd.product_category_code = #{key_code}
                and wpd.product_detail_name = #{original_product_name};
            </if>
            <if test="product_detail_update_flag == true">
                wpm.product_category_code = #{key_code}
                and wpm.product_category_name = #{original_product_name};
            </if>
    </update>

    <delete id="deleteProductInfo" parameterType="HashMap">
        delete
        <choose>
            <when test="product_type == 'detail'">
                wpd
            </when>
            <when test="product_type == 'group'">
                wpm,
                wpd
            </when>
            <otherwise>
                wpm,
                wpd,
                pmc
            </otherwise>
        </choose>
        from
            winia_product_mst
            <choose>
                <when test="product_type == 'group' or product_type == 'detail'">
                    wpm
                    LEFT OUTER JOIN winia_product_dtl wpd on(wpd.product_category_code = wpm.product_category_code)
                </when>
                <otherwise>
                    wpm
                    LEFT OUTER JOIN winia_product_dtl wpd on(wpd.product_category_code = wpm.product_category_code)
                    LEFT OUTER JOIN product_main_category pmc on(pmc.product_category_code = wpm.product_category_code)
                </otherwise>
            </choose>
        where
            <choose>
                <when test="product_type == 'detail'">
                    wpd.product_code = #{key_code}
                </when>
                <when test="product_type == 'group'">
                    wpm.product_category_code = #{key_code}
                        or
                    wpd.product_category_code = #{key_code}
                </when>
                <otherwise>
                    pmc.product_category_code = #{key_code}
                        or
                    <choose>
                        <when test="main_group_flag == true">
                            <foreach collection="product_category_code_list" item="product_category_code" separator="or">
                                wpm.product_category_code = #{product_category_code}
                                    or
                                wpd.product_category_code = #{product_category_code}
                            </foreach>
                        </when>
                        <otherwise>
                            wpm.product_category_code = #{key_code}
                                or
                            wpd.product_category_code = #{key_code}
                        </otherwise>
                    </choose>
                </otherwise>
            </choose>
        ;
    </delete>


    <!--  Trouble Symptom  -->

    <insert id="insertTroubleSymptomOfProduct" parameterType="com.project.winiaaid.domain.manager.ManagerTroubleSymptom">
        insert into
        trouble_product_category
        values
        <foreach collection="trouble_symptom_code_list" item="trouble_symptom_code" separator=",">
            (
            0,
            #{product_category_code},
            #{trouble_symptom_code}
            )
        </foreach>
        ;
    </insert>

    <insert id="insertTroubleSymptom" parameterType="String">
        insert into
            trouble_symptom_table
        values(
            0,
            #{trouble_symptom}
            );
    </insert>

    <delete id="deleteTroubleSymptomOfProduct" parameterType="HashMap">
        delete
        from
            trouble_product_category
        where
        <foreach collection="trouble_symptom_id_list" item="trouble_symptom_id" separator="or">
            id = #{trouble_symptom_id}
        </foreach>
    </delete>

    <delete id="deleteTroubleSymptomByTroubleSymptomCode" parameterType="Integer">
        delete
        from
            trouble_symptom_table
        where
            trouble_code = #{trouble_symptom_code};
    </delete>

<!--  Solution Board  -->

    <insert id="insertSolution" parameterType="com.project.winiaaid.domain.manager.ManagerSolution"
    useGeneratedKeys="true" keyProperty="solution_code">
        INSERT INTO
            solution_table
        VALUES(
            0,
            #{solution_title},
            #{solution_content},
            #{solution_type_code},
            #{solution_board_type_code},
            now(),
            now()
        );
    </insert>

    <insert id="insertSolutionFile" parameterType="com.project.winiaaid.domain.manager.ManagerSolution">
        INSERT INTO
            solution_file
        VALUES
        <foreach collection="file_name_list" item="file_name" separator=",">
            (
                0,
                #{file_name},
                #{solution_code}
            )
        </foreach>
        ;
    </insert>

    <insert id="insertProductSolution" parameterType="com.project.winiaaid.domain.manager.ManagerSolution">
        INSERT INTO
            solution_product_table
        VALUES
        <foreach collection="solution_code_list" item="solution_code" separator=",">
            (
                0,
                #{product_code},
                #{solution_code},
                0
            )
        </foreach>
        ;
    </insert>

    <resultMap id="findSolutionDetailResultMap" type="com.project.winiaaid.domain.manager.ManagerSolution">
        <result column="solution_title" property="solution_title"/>
        <result column="solution_content" property="solution_content"/>
        <result column="solution_type_code" property="solution_type_code"/>
        <result column="solution_board_type" property="solution_board_type_code"/>
        <collection property="file_list" ofType="com.project.winiaaid.domain.solution.SolutionFile">
            <result column="file_code" property="file_code"/>
            <result column="file_name" property="file_name"/>
        </collection>
    </resultMap>

    <select id="findSolutionDetailBySolutionCode" parameterType="Integer" resultMap="findSolutionDetailResultMap">
        SELECT
            st.solution_title,
            st.solution_content,
            st.solution_type_code,
            st.solution_board_type,

            sf.file_code,
            sf.file_name
        FROM
            solution_table st
            LEFT OUTER JOIN solution_file sf on(sf.solution_code = st.solution_code)
        WHERE
            st.solution_code = #{solution_code};
    </select>

    <select id="findAllSolutionBoardCodeInDeletedSolutionTypeCode" parameterType="Integer" resultType="Integer">
        SELECT
            solution_board_code
        FROM
            solution_product_table
        WHERE
            solution_code IN (SELECT
                                solution_code
                            FROM
                                solution_table
                            WHERE
                                solution_type_code = #{solution_type_code});
    </select>

    <select id="findFileNameBySolutionCode" parameterType="Integer" resultType="String">
        SELECT
            file_name
        FROM
            solution_file
        WHERE
            solution_code = #{solution_code};
    </select>

    <update id="updateSolution" parameterType="com.project.winiaaid.domain.manager.ManagerSolution">
        UPDATE
            solution_table
        SET
            solution_title = #{solution_title},
            solution_content = #{solution_content},
            solution_type_code = #{solution_type_code},
            solution_board_type = #{solution_board_type_code},
            update_date = now()
        WHERE
            solution_code = #{solution_code};
    </update>

    <delete id="deleteSolutionBySolutionCode" parameterType="Integer">
        DELETE
        FROM
            solution_table
        WHERE
            solution_code = #{solution_code};
    </delete>

    <delete id="deleteSolutionFile" parameterType="java.util.List">
        DELETE
        FROM
            solution_file
        where
            <foreach collection="delete_file_code_list" item="delete_file_code" separator="or">
                file_code = #{delete_file_code}
            </foreach>
        ;
    </delete>

    <delete id="deleteSolutionBoardList" parameterType="java.util.List">
        DELETE
        FROM
            solution_product_table
        where
            <foreach collection="delete_board_code_list" item="delete_board_code" separator="or">
                solution_board_code = #{delete_board_code}
            </foreach>
        ;
    </delete>

    <delete id="deleteSolutionBoardByCode" parameterType="Integer">
        DELETE
        FROM
            solution_product_table
        WHERE
            solution_board_code = #{solution_board_code};
    </delete>


    <!-- Solution Type -->

    <insert id="insertSolutionType" parameterType="String">
        INSERT INTO
            solution_type_table
        values(
            0,
            #{solution_type_name}
        );
    </insert>

    <update id="disabledAllSolutionInDeletedSolutionTypeCode" parameterType="Integer">
        UPDATE
        solution_table
        SET
        solution_type_code = -1
        WHERE
        solution_type_code = #{solution_type_code};
    </update>

    <update id="updateSolutionType" parameterType="com.project.winiaaid.domain.manager.ManagerSolution">
        UPDATE
            solution_type_table
        SET
            solution_type_name = #{solution_type_name}
        WHERE
            solution_type_code = #{solution_type_code};
    </update>

    <delete id="deleteSolutionType" parameterType="Integer">
        DELETE
        FROM
            solution_type_table
        WHERE
            solution_type_code = #{solution_type_code};
    </delete>



<!-- Board   -->
    <insert id="insertBoardResponse" parameterType="com.project.winiaaid.domain.manager.ManagerBoard">
        INSERT INTO
            board_dtl
        VALUES(
            0,
            #{board_code},
            #{response_content},
            NOW(),
            NOW()
        );
    </insert>

    <update id="updateBoardResponse" parameterType="com.project.winiaaid.domain.manager.ManagerBoard">
        UPDATE
            board_dtl
        SET
            response = #{response_content},
            update_date = now()
        WHERE
            board_code = #{board_code};
    </update>

    <update id="updateBoardType" parameterType="com.project.winiaaid.domain.manager.ManagerBoard">
        UPDATE
            board_mst
        SET
            id1 = #{board_type_code},
            id2 = #{id2},
            board_code = #{new_board_code},
            board_type_code = #{board_type_code}
        WHERE
            board_code = #{board_code};

        UPDATE
            board_dtl
        SET
            board_code = #{new_board_code}
        WHERE
            board_code = #{board_code};

        UPDATE
            board_file
        SET
            board_code = #{new_board_code}
        WHERE
            board_code = #{board_code};

        UPDATE
            non_member_board_table
        SET
            board_code = #{new_board_code}
        WHERE
            board_code = #{board_code};
    </update>


    <!--  Service Request Info  -->
    <select id="findServiceHistoryListByServiceTypeCode" parameterType="HashMap" resultType="com.project.winiaaid.domain.manager.ManagerServiceTitle">
        SELECT
            *,
            (select
                count(*)
            from
                repair_service_table
            where
                service_type_code = #{service_type_code}
                <if test="progress_status != 'all'">
                        and
                    progress_status = #{progress_status_code}
                </if>
            )
            +
            (select
                count(*)
            from
                recall_service_table
            where
                service_type_code = #{service_type_code}
                <if test="progress_status != 'all'">
                        and
                    progress_status = #{progress_status_code}
                </if>
            ) as total_count
        from
            (SELECT
                rst.service_code,
                if(rst.non_member_flag = 0, um.user_name, nmst.user_name) AS user_name,
                rst.service_type_code,
                rst.progress_status,
                rst.request_date,

                pmd.model_number,

                if(wpm.product_category_name != wpd.product_detail_name, CONCAT(wpm.product_category_name, ' > ', wpd.product_detail_name), wpm.product_category_name) AS product_name,

                tst.trouble_symptom
            FROM
                repair_service_table rst
                LEFT OUTER JOIN product_model_detail pmd ON(pmd.model_code = rst.model_code)
                LEFT OUTER JOIN user_mst um ON(um.user_code = rst.user_code)
                LEFT OUTER JOIN non_member_service_table nmst ON(nmst.user_code = rst.user_code)
                LEFT OUTER JOIN winia_product_mst wpm ON(wpm.product_category_code = rst.product_category_code)
                LEFT OUTER JOIN winia_product_dtl wpd ON(wpd.product_code = rst.product_code)
                LEFT OUTER JOIN trouble_symptom_table tst ON(tst.trouble_code = rst.trouble_code)

            UNION

            SELECT
                rst.service_code,
                if(rst.non_member_flag = 0, um.user_name, nmst.user_name) AS user_name,
                rst.service_type_code,
                rst.progress_status,
                rst.request_date,

                pmd.model_number,

                null,
                null
            FROM
                recall_service_table rst
                LEFT OUTER JOIN product_model_detail pmd ON(pmd.model_code = rst.model_code)
                LEFT OUTER JOIN user_mst um ON(um.user_code = rst.user_code)
                LEFT OUTER JOIN non_member_service_table nmst ON(nmst.user_code = rst.user_code)) all_service_data
        WHERE
            service_type_code = #{service_type_code}
            <if test="progress_status != 'all'">
                    and
                progress_status = #{progress_status_code}
            </if>
        LIMIT #{page}, 10;
    </select>

    <update id="completeRepairServiceByRepairServiceCode" parameterType="String">
        UPDATE
            <choose>
                <when test="service_type == 'repair'">
                    repair_service_table rst
                    INNER JOIN engineer_reservation_table ert on(ert.service_code = rst.service_code)
                </when>
                <otherwise>
                    recall_service_table rst
                </otherwise>
            </choose>
        SET
            rst.progress_status = 2
            <if test="service_type == 'repair'">
                ,
                ert.progress_status = 0
            </if>
        WHERE
            rst.service_code = #{service_code};
    </update>



    <select id="findAllUserList" resultType="com.project.winiaaid.domain.user.User">
        SELECT
            um.user_code,
            um.user_name,
            um.user_id,
            um.user_email,
            um.user_gender,
            um.postal_code,
            um.main_address,
            um.detail_address,
            um.main_phone_number,
            um.user_birth,
            um.birth_type,
            um.create_date,

            ud.sub_phone_number,
            ud.email_receive_flag,
            ud.sms_receive_flag,
            ud.mail_receive_flag,
            ud.staff_company,
            ud.employee_number
        FROM
            user_mst um
            LEFT OUTER JOIN user_dtl ud ON(ud.user_code = um.user_code)
    </select>

    <delete id="deleteUserByUserCode" parameterType="Integer">
        DELETE
        FROM
            user_mst
        WHERE
            user_code = #{user_code};
    </delete>
</mapper>
